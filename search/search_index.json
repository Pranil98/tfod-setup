{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Steps to configure tensorflow object detection- Object detection tensorflow reference Download the following- Download v1.13.0 model Download faster_rcnn_inception_v2_coco or any other model of your choice Download Dataset & utils Download labelImg tool extract all the above zip files into a tfod folder Creating virtual env using conda Commands for specific python version conda create -n your_env_name python=3.6 for latest python version conda activate your_env_name Install the following packages - for GPU pip install pillow lxml Cython contextlib2 jupyter matplotlib pandas opencv-python tensorflow-gpu==1.14.0 for non GPU pip install pillow lxml Cython contextlib2 jupyter matplotlib pandas opencv-python tensorflow==1.14.0 For protobuff to py conversion download from - here for windows cd C:\\tensorflow1\\models\\research linux mac protoc object_detection/protos/*.proto --python_out=. windows protoc object_detection/protos/*.proto --python_out=. conda package manager conda install -c anaconda protobuf Paste all things present in utils into research folder Paste model foler into research folder Now cd to research folder and run the following python file - python xml_to_csv.py Run the following to generate train and test records python generate_tfrecord.py --csv_input=images/train_labels.csv --image_dir=images/train --output_path=train.record python generate_tfrecord.py --csv_input=images/test_labels.csv --image_dir=images/test --output_path=test.record Copy from research/object_detection/samples/config/ faster_rcnn_inception_v2_coco.config into research/training Changes to be maid in config file are highlighted below- Update no. of classes- model { ssd { num_classes: 6 box_coder { faster_rcnn_box_coder { Update no. of steps- num_steps: 20 data_augmentation_options { random_horizontal_flip { } } data_augmentation_options { ssd_random_crop { } } } Update input path and label map path train_input_reader: { tf_record_input_reader { input_path: \"train.record\" } label_map_path: \"training/labelmap.pbtxt\" } eval_config: { num_examples: 8000 # Note: The below line limits the evaluation process to 10 evaluations. # Remove the below line to evaluate indefinitely. max_evals: 10 } eval_input_reader: { tf_record_input_reader { input_path: \"test.record\" } label_map_path: \"training/labelmap.pbtxt\" shuffle: false num_readers: 1 } From research/object_detection/lecgacy/ copy train.py to research folder Copy deplyment and nets folder from research/slim into research NOW Run from research folder. This will start ur training local system- python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/faster_rcnn_inception_v2_coco.config","title":"Steps to configure tensorflow object detection-"},{"location":"#steps-to-configure-tensorflow-object-detection-","text":"Object detection tensorflow reference","title":"Steps to configure tensorflow object detection-"},{"location":"#download-the-following-","text":"Download v1.13.0 model Download faster_rcnn_inception_v2_coco or any other model of your choice Download Dataset & utils Download labelImg tool extract all the above zip files into a tfod folder","title":"Download the following-"},{"location":"#creating-virtual-env-using-conda","text":"Commands for specific python version conda create -n your_env_name python=3.6 for latest python version conda activate your_env_name","title":"Creating virtual env using conda"},{"location":"#install-the-following-packages-","text":"","title":"Install the following packages -"},{"location":"#for-gpu","text":"pip install pillow lxml Cython contextlib2 jupyter matplotlib pandas opencv-python tensorflow-gpu==1.14.0","title":"for GPU"},{"location":"#for-non-gpu","text":"pip install pillow lxml Cython contextlib2 jupyter matplotlib pandas opencv-python tensorflow==1.14.0","title":"for non GPU"},{"location":"#for-protobuff-to-py-conversion-download-from-","text":"here for windows cd C:\\tensorflow1\\models\\research","title":"For protobuff to py conversion download from -"},{"location":"#linux-mac","text":"protoc object_detection/protos/*.proto --python_out=.","title":"linux mac"},{"location":"#windows","text":"protoc object_detection/protos/*.proto --python_out=.","title":"windows"},{"location":"#conda-package-manager","text":"conda install -c anaconda protobuf","title":"conda package manager"},{"location":"#paste-all-things-present-in-utils-into-research-folder","text":"","title":"Paste all things present in utils into research folder"},{"location":"#paste-model-foler-into-research-folder","text":"Now cd to research folder and run the following python file - python xml_to_csv.py","title":"Paste model foler into research folder"},{"location":"#run-the-following-to-generate-train-and-test-records","text":"python generate_tfrecord.py --csv_input=images/train_labels.csv --image_dir=images/train --output_path=train.record python generate_tfrecord.py --csv_input=images/test_labels.csv --image_dir=images/test --output_path=test.record","title":"Run the following to generate train and test records"},{"location":"#copy-from-researchobject_detectionsamplesconfig-faster_rcnn_inception_v2_cococonfig-into-researchtraining","text":"","title":"Copy from research/object_detection/samples/config/ faster_rcnn_inception_v2_coco.config into research/training"},{"location":"#changes-to-be-maid-in-config-file-are-highlighted-below-","text":"","title":"Changes to be maid in config file are highlighted below-"},{"location":"#update-no-of-classes-","text":"model { ssd { num_classes: 6 box_coder { faster_rcnn_box_coder {","title":"Update no. of classes-"},{"location":"#update-no-of-steps-","text":"num_steps: 20 data_augmentation_options { random_horizontal_flip { } } data_augmentation_options { ssd_random_crop { } } }","title":"Update no. of steps-"},{"location":"#update-input-path-and-label-map-path","text":"train_input_reader: { tf_record_input_reader { input_path: \"train.record\" } label_map_path: \"training/labelmap.pbtxt\" } eval_config: { num_examples: 8000 # Note: The below line limits the evaluation process to 10 evaluations. # Remove the below line to evaluate indefinitely. max_evals: 10 } eval_input_reader: { tf_record_input_reader { input_path: \"test.record\" } label_map_path: \"training/labelmap.pbtxt\" shuffle: false num_readers: 1 }","title":"Update input path and label map path"},{"location":"#from-researchobject_detectionlecgacy-copy-trainpy-to-research-folder","text":"","title":"From research/object_detection/lecgacy/ copy train.py to research folder"},{"location":"#copy-deplyment-and-nets-folder-from-researchslim-into-research","text":"","title":"Copy deplyment and nets folder from research/slim into research"},{"location":"#now-run-from-research-folder-this-will-start-ur-training-local-system-","text":"python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/faster_rcnn_inception_v2_coco.config","title":"NOW Run from research folder. This will start ur training local system-"},{"location":"p02/","text":"Steps to train the your tfod model on colab - Steps to start training in colab for tfod- 1. Do all the necessary steps shown in the previous page in your local system except the last step where training starts- Note I mean do everything before the following step- python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssdlite_mobilenet_v1_coco.config 2.Move whole tfod folder to your google drive. 3. Open a jupyter notebook in the root of your folder structure. I mean just inside the tfod folder. 4. Mount the drive in Colab and initialize it with GPU. 5. In the first cell run the following command so that it selects TensorFlow 1 for the training- %tensorflow_version 1.x 6. In the notebook import os. And set a path to the research directory in a Variable. import os RESEARCH_DIR = \"/content/drive/My Drive/PATH_TO_TFOD/tfod/models-1.13.0/research\" 7. Run the following line to change the directory- os . chdir ( RESEARCH_FOLDER_PATH ) 8. Run the following line to verify that u are in the research folder- os . getcwd () 9. Now run the training command to start the training in Colab- Note Change the name of config file as per your model name !python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssdlite_mobilenet_v1_coco.config 10. Copy and paste following code in your browser console to prevent it from terminating- function ClickConnect (){ console . log ( \"Working\" ); document . querySelector ( \"colab-toolbar-button\" ). click () } setInterval ( ClickConnect , 60000 ) reference for point 10","title":"Steps to train the your tfod model on colab -"},{"location":"p02/#steps-to-train-the-your-tfod-model-on-colab-","text":"Steps to start training in colab for tfod-","title":"Steps to train the your tfod model on colab -"},{"location":"p02/#1-do-all-the-necessary-steps-shown-in-the-previous-page-in-your-local-system-except-the-last-step-where-training-starts-","text":"Note I mean do everything before the following step- python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssdlite_mobilenet_v1_coco.config","title":"1. Do all the necessary steps shown in the previous page in your local system except the last step where training starts-"},{"location":"p02/#2move-whole-tfod-folder-to-your-google-drive","text":"","title":"2.Move whole tfod folder to your google drive."},{"location":"p02/#3-open-a-jupyter-notebook-in-the-root-of-your-folder-structure-i-mean-just-inside-the-tfod-folder","text":"","title":"3. Open a jupyter notebook in the root of your folder structure. I mean just inside the tfod folder."},{"location":"p02/#4-mount-the-drive-in-colab-and-initialize-it-with-gpu","text":"","title":"4. Mount the drive in Colab and initialize it with GPU."},{"location":"p02/#5-in-the-first-cell-run-the-following-command-so-that-it-selects-tensorflow-1-for-the-training-","text":"%tensorflow_version 1.x","title":"5. In the first cell run the following command so that it selects TensorFlow 1 for the training-"},{"location":"p02/#6-in-the-notebook-import-os-and-set-a-path-to-the-research-directory-in-a-variable","text":"import os RESEARCH_DIR = \"/content/drive/My Drive/PATH_TO_TFOD/tfod/models-1.13.0/research\"","title":"6. In the notebook import os. And set a path to the research directory in a Variable."},{"location":"p02/#7-run-the-following-line-to-change-the-directory-","text":"os . chdir ( RESEARCH_FOLDER_PATH )","title":"7. Run the following line to change the directory-"},{"location":"p02/#8-run-the-following-line-to-verify-that-u-are-in-the-research-folder-","text":"os . getcwd ()","title":"8. Run the following line to verify that u are in the research folder-"},{"location":"p02/#9-now-run-the-training-command-to-start-the-training-in-colab-","text":"Note Change the name of config file as per your model name !python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssdlite_mobilenet_v1_coco.config","title":"9. Now run the training command to start the training in Colab-"},{"location":"p02/#10-copy-and-paste-following-code-in-your-browser-console-to-prevent-it-from-terminating-","text":"function ClickConnect (){ console . log ( \"Working\" ); document . querySelector ( \"colab-toolbar-button\" ). click () } setInterval ( ClickConnect , 60000 ) reference for point 10","title":"10. Copy and paste following code in your browser console to prevent it from terminating-"},{"location":"referencesAndFeedback/","text":"References- iNeuron docs TensorFlow Object Detection API tutorial For any Feedback - Feedback Hi fellow Devs, I've tried my best to make this documentation as good as possible and also I've mentioned almost all the references that I've refered. Apart from that if you wish to give some constructive feedback then please mail me at - sunny.c17hawke@gmail.com Thanks and Regards, Sunny","title":"References-"},{"location":"referencesAndFeedback/#references-","text":"iNeuron docs TensorFlow Object Detection API tutorial","title":"References-"},{"location":"referencesAndFeedback/#for-any-feedback-","text":"Feedback Hi fellow Devs, I've tried my best to make this documentation as good as possible and also I've mentioned almost all the references that I've refered. Apart from that if you wish to give some constructive feedback then please mail me at - sunny.c17hawke@gmail.com Thanks and Regards, Sunny","title":"For any Feedback -"}]}