{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Steps to configure tensorflow object detection- STEP-1 Download the following content- Download v1.13.0 model Download ssd_mobilenet_v1_coco model from model zoo or any other model of your choice from tensorflow model zoo. Download Dataset & utils Download labelImg tool for labeling images. before extraction your should have a the following compressed files - STEP-2 extract all the above zip files into a tfod folder and remove the compressed files. Now you should have the following folders - STEP-3 Creating virtual env using conda Commands for specific python version conda create -n your_env_name python=3.6 for latest python version conda activate your_env_name STEP-4 Install the following packages in your new environment- for GPU pip install pillow lxml Cython contextlib2 jupyter matplotlib pandas opencv-python tensorflow-gpu==1.14.0 for CPU only pip install pillow lxml Cython contextlib2 jupyter matplotlib pandas opencv-python tensorflow==1.14.0 STEP-5 For protobuff to .py conversion download from tool from here - For windows -> download source for other versions and OS - click here Open a commmand line and cd to research folder Now in research folder run the following command- For Linux or Mac protoc object_detection/protos/*.proto --python_out=. For Windows protoc object_detection/protos/*.proto --python_out=. STEP-6 install protobuf using conda package manager conda install -c anaconda protobuf STEP-7 Paste all content present in utils into research folder Following are the files and folder present in the utils folder- STEP-8 Paste SSD or fasterRCNN folder or any other model downloaded from model zoo into research folder- Now cd to research folder and run the following python file - python xml_to_csv.py STEP-9 Run the following to generate train and test records from research folder- python generate_tfrecord.py --csv_input=images/train_labels.csv --image_dir=images/train --output_path=train.record python generate_tfrecord.py --csv_input=images/test_labels.csv --image_dir=images/test --output_path=test.record STEP-10 Copy from research/object_detection/samples/config/ YOURMODEL.config file into research/training Changes to be made in config file are highlighted below- Note Following config file shown here is with respect to ssd_mobilenet_v1_coco.So if you have downloaded it for any other model apart from SSD you'll see config file as shown below- model { YOUR_MODEL_NAME { num_classes: 6 box_coder { faster_rcnn_box_coder { Update no. of classes- model { ssd { num_classes: 6 box_coder { faster_rcnn_box_coder { Update no. of steps- num_steps: 20 data_augmentation_options { random_horizontal_flip { } } data_augmentation_options { ssd_random_crop { } } } Update input path and label map path train_input_reader: { tf_record_input_reader { input_path: \"train.record\" } label_map_path: \"training/labelmap.pbtxt\" } eval_config: { num_examples: 8000 # Note: The below line limits the evaluation process to 10 evaluations. # Remove the below line to evaluate indefinitely. max_evals: 10 } eval_input_reader: { tf_record_input_reader { input_path: \"test.record\" } label_map_path: \"training/labelmap.pbtxt\" shuffle: false num_readers: 1 } STEP-11 From research/object_detection/lecgacy/ copy train.py to research folder legacy folder contains train.py as shown below - STEP-12 Copy deployment and nets folder from research/slim into research folder slim folder contains the following folders - STEP-13 NOW Run from research folder. This will start the training in your local system- Note copy the command and replace YOUR_MODEL.config with your own models name for example ssd_mobilenet_v1_coco python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/YOUR_MODEL.config Warning Always run all the commands in research folder","title":"Steps to configure tensorflow object detection-"},{"location":"#steps-to-configure-tensorflow-object-detection-","text":"","title":"Steps to configure tensorflow object detection-"},{"location":"#step-1-download-the-following-content-","text":"Download v1.13.0 model Download ssd_mobilenet_v1_coco model from model zoo or any other model of your choice from tensorflow model zoo. Download Dataset & utils Download labelImg tool for labeling images. before extraction your should have a the following compressed files -","title":"STEP-1 Download the following content-"},{"location":"#step-2-extract-all-the-above-zip-files-into-a-tfod-folder-and-remove-the-compressed-files","text":"Now you should have the following folders -","title":"STEP-2 extract all the above zip files into a tfod folder and remove the compressed files."},{"location":"#step-3-creating-virtual-env-using-conda","text":"Commands for specific python version conda create -n your_env_name python=3.6 for latest python version conda activate your_env_name","title":"STEP-3 Creating virtual env using conda"},{"location":"#step-4-install-the-following-packages-in-your-new-environment-","text":"","title":"STEP-4 Install the following packages in your new environment-"},{"location":"#for-gpu","text":"pip install pillow lxml Cython contextlib2 jupyter matplotlib pandas opencv-python tensorflow-gpu==1.14.0","title":"for GPU"},{"location":"#for-cpu-only","text":"pip install pillow lxml Cython contextlib2 jupyter matplotlib pandas opencv-python tensorflow==1.14.0","title":"for CPU only"},{"location":"#step-5-for-protobuff-to-py-conversion-download-from-tool-from-here-","text":"For windows -> download source for other versions and OS - click here Open a commmand line and cd to research folder Now in research folder run the following command-","title":"STEP-5 For protobuff to .py conversion download from tool from here -"},{"location":"#for-linux-or-mac","text":"protoc object_detection/protos/*.proto --python_out=.","title":"For Linux or Mac"},{"location":"#for-windows","text":"protoc object_detection/protos/*.proto --python_out=.","title":"For Windows"},{"location":"#step-6-install-protobuf-using-conda-package-manager","text":"conda install -c anaconda protobuf","title":"STEP-6 install protobuf using conda package manager"},{"location":"#step-7-paste-all-content-present-in-utils-into-research-folder","text":"Following are the files and folder present in the utils folder-","title":"STEP-7 Paste all content present in utils into research folder"},{"location":"#step-8-paste-ssd-or-fasterrcnn-folder-or-any-other-model-downloaded-from-model-zoo-into-research-folder-","text":"Now cd to research folder and run the following python file - python xml_to_csv.py","title":"STEP-8 Paste SSD or fasterRCNN folder or any other model downloaded from model zoo into research folder-"},{"location":"#step-9-run-the-following-to-generate-train-and-test-records","text":"from research folder- python generate_tfrecord.py --csv_input=images/train_labels.csv --image_dir=images/train --output_path=train.record python generate_tfrecord.py --csv_input=images/test_labels.csv --image_dir=images/test --output_path=test.record","title":"STEP-9 Run the following to generate train and test records"},{"location":"#step-10-copy-from-researchobject_detectionsamplesconfig-yourmodelconfig-file-into-researchtraining","text":"","title":"STEP-10 Copy from research/object_detection/samples/config/ YOURMODEL.config file into research/training"},{"location":"#changes-to-be-made-in-config-file-are-highlighted-below-","text":"Note Following config file shown here is with respect to ssd_mobilenet_v1_coco.So if you have downloaded it for any other model apart from SSD you'll see config file as shown below- model { YOUR_MODEL_NAME { num_classes: 6 box_coder { faster_rcnn_box_coder {","title":"Changes to be made in config file are highlighted below-"},{"location":"#update-no-of-classes-","text":"model { ssd { num_classes: 6 box_coder { faster_rcnn_box_coder {","title":"Update no. of classes-"},{"location":"#update-no-of-steps-","text":"num_steps: 20 data_augmentation_options { random_horizontal_flip { } } data_augmentation_options { ssd_random_crop { } } }","title":"Update no. of steps-"},{"location":"#update-input-path-and-label-map-path","text":"train_input_reader: { tf_record_input_reader { input_path: \"train.record\" } label_map_path: \"training/labelmap.pbtxt\" } eval_config: { num_examples: 8000 # Note: The below line limits the evaluation process to 10 evaluations. # Remove the below line to evaluate indefinitely. max_evals: 10 } eval_input_reader: { tf_record_input_reader { input_path: \"test.record\" } label_map_path: \"training/labelmap.pbtxt\" shuffle: false num_readers: 1 }","title":"Update input path and label map path"},{"location":"#step-11-from-researchobject_detectionlecgacy-copy-trainpy-to-research-folder","text":"legacy folder contains train.py as shown below -","title":"STEP-11 From research/object_detection/lecgacy/ copy train.py to research folder"},{"location":"#step-12-copy-deployment-and-nets-folder-from-researchslim-into-research-folder","text":"slim folder contains the following folders -","title":"STEP-12 Copy deployment and nets folder from research/slim into research folder"},{"location":"#step-13-now-run-from-research-folder-this-will-start-the-training-in-your-local-system-","text":"Note copy the command and replace YOUR_MODEL.config with your own models name for example ssd_mobilenet_v1_coco python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/YOUR_MODEL.config Warning Always run all the commands in research folder","title":"STEP-13 NOW Run from research folder. This will start the training in your local system-"},{"location":"p02/","text":"Steps to train the your tfod model on colab - Steps to start training in colab for tfod- STEP 1. Do all the necessary steps shown in the previous page in your local system except the last step where training starts- Note I mean do everything before the following step- python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssdlite_mobilenet_v1_coco.config STEP 2.Move whole tfod folder to your google drive. STEP 3. Open a jupyter notebook in the root of your folder structure. I mean just inside the tfod folder. STEP 4. Mount the drive in Colab and initialize it with GPU. STEP 5. In the first cell run the following command so that it selects TensorFlow 1 for the training- %tensorflow_version 1.x STEP 6. In the notebook import os. And set a path to the research directory in a Variable. import os RESEARCH_DIR = \"/content/drive/My Drive/PATH_TO_TFOD/tfod/models-1.13.0/research\" STEP 7. Run the following line to change the directory- os . chdir ( RESEARCH_DIR ) STEP 8. Run the following line to verify that you are in the research folder- os . getcwd () STEP 9. Now run the training command to start the training in Colab- Note Change the name of config file as per your model name !python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssdlite_mobilenet_v1_coco.config STEP 10. Copy and paste following code in your browser console to prevent it from terminating- function ClickConnect (){ console . log ( \"Working\" ); document . querySelector ( \"colab-toolbar-button\" ). click () } setInterval ( ClickConnect , 60000 ) reference for point 10 Screenshot of colab code- Screenshot of begining of training-","title":"Steps to train the your tfod model on colab -"},{"location":"p02/#steps-to-train-the-your-tfod-model-on-colab-","text":"Steps to start training in colab for tfod-","title":"Steps to train the your tfod model on colab -"},{"location":"p02/#step-1-do-all-the-necessary-steps-shown-in-the-previous-page-in-your-local-system-except-the-last-step-where-training-starts-","text":"Note I mean do everything before the following step- python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssdlite_mobilenet_v1_coco.config","title":"STEP 1. Do all the necessary steps shown in the previous page in your local system except the last step where training starts-"},{"location":"p02/#step-2move-whole-tfod-folder-to-your-google-drive","text":"","title":"STEP 2.Move whole tfod folder to your google drive."},{"location":"p02/#step-3-open-a-jupyter-notebook-in-the-root-of-your-folder-structure-i-mean-just-inside-the-tfod-folder","text":"","title":"STEP 3. Open a jupyter notebook in the root of your folder structure. I mean just inside the tfod folder."},{"location":"p02/#step-4-mount-the-drive-in-colab-and-initialize-it-with-gpu","text":"","title":"STEP 4. Mount the drive in Colab and initialize it with GPU."},{"location":"p02/#step-5-in-the-first-cell-run-the-following-command-so-that-it-selects-tensorflow-1-for-the-training-","text":"%tensorflow_version 1.x","title":"STEP 5. In the first cell run the following command so that it selects TensorFlow 1 for the training-"},{"location":"p02/#step-6-in-the-notebook-import-os-and-set-a-path-to-the-research-directory-in-a-variable","text":"import os RESEARCH_DIR = \"/content/drive/My Drive/PATH_TO_TFOD/tfod/models-1.13.0/research\"","title":"STEP 6. In the notebook import os. And set a path to the research directory in a Variable."},{"location":"p02/#step-7-run-the-following-line-to-change-the-directory-","text":"os . chdir ( RESEARCH_DIR )","title":"STEP 7. Run the following line to change the directory-"},{"location":"p02/#step-8-run-the-following-line-to-verify-that-you-are-in-the-research-folder-","text":"os . getcwd ()","title":"STEP 8. Run the following line to verify that you are in the research folder-"},{"location":"p02/#step-9-now-run-the-training-command-to-start-the-training-in-colab-","text":"Note Change the name of config file as per your model name !python train.py --logtostderr --train_dir=training/ --pipeline_config_path=training/ssdlite_mobilenet_v1_coco.config","title":"STEP 9. Now run the training command to start the training in Colab-"},{"location":"p02/#step-10-copy-and-paste-following-code-in-your-browser-console-to-prevent-it-from-terminating-","text":"function ClickConnect (){ console . log ( \"Working\" ); document . querySelector ( \"colab-toolbar-button\" ). click () } setInterval ( ClickConnect , 60000 ) reference for point 10","title":"STEP 10. Copy and paste following code in your browser console to prevent it from terminating-"},{"location":"p02/#screenshot-of-colab-code-","text":"","title":"Screenshot of colab code-"},{"location":"p02/#screenshot-of-begining-of-training-","text":"","title":"Screenshot of begining of training-"},{"location":"referencesAndFeedback/","text":"References- iNeuron docs TensorFlow Object Detection API tutorial TensorFlow Object Detection API tutorial For any Feedback - Feedback Hi fellow Devs, I've tried my best to make this documentation as good as possible and also I've mentioned almost all the references that I've refered. Apart from that if you wish to give some constructive feedback then please mail me at - sunny.c17hawke@gmail.com Thanks and Regards, Sunny","title":"References-"},{"location":"referencesAndFeedback/#references-","text":"iNeuron docs TensorFlow Object Detection API tutorial TensorFlow Object Detection API tutorial","title":"References-"},{"location":"referencesAndFeedback/#for-any-feedback-","text":"Feedback Hi fellow Devs, I've tried my best to make this documentation as good as possible and also I've mentioned almost all the references that I've refered. Apart from that if you wish to give some constructive feedback then please mail me at - sunny.c17hawke@gmail.com Thanks and Regards, Sunny","title":"For any Feedback -"}]}